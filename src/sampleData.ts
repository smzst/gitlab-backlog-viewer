import {Ticket} from "./models/domain/Ticket";

export const sampleData: Ticket[] = [
    {
        index: 1,
        title: "#1231 \"広告構造データマートへ格納\" リリース",
        description: "## 解決したいこと(Why)\n" +
            "\n" +
            "issues#1231 のリリースを行う。\n" +
            "\n" +
            "## Done 条件\n" +
            "\n" +
            "## 完了条件(What)\n" +
            "\n" +
            "### やること\n" +
            "\n" +
            "#### リリース作業\n" +
            "\n" +
            "計: 2.5 h\n" +
            "\n" +
            "1. prod Data Mart バックアップ\n" +
            "1. prod Data Mart ダンプ\n" +
            "    * #1312 の数値チェックで利用するため\n" +
            "1. リリース前に dev, prod の管理画面にログインし、30日前後前の日時に指定して結果を保存しておく\n" +
            "1. Data Mart マイグレーション\n" +
            "    * dev の クリエイティブレポート テーブル削除とマイグレーション実行\n" +
            "    * prod の クリエイティブレポート テーブル削除とマイグレーション実行\n" +
            "1. workflow リリース\n" +
            "    * https://gitlab.devsep.com/pyxis-enterprise/general/workflow/merge_requests/187 のマージ/CI 完了\n" +
            "1. 当日の Digdag セッションをリトライ\n" +
            "1. 動作確認(user-site/webapp-backend)\n" +
            "    * Data Mart のスキーマ変更が既存の動作に影響していないこと\n" +
            "        * 3 で取得したデータと同じデータがブラウザに返ってきていることを確認する\n" +
            "1. https://gitlab.devsep.com/pyxis-enterprise/general/webapp-backend/merge_requests/297 のマージ\n" +
            "\n" +
            "### やらないこと\n" +
            "\n" +
            "## リリース影響\n" +
            "\n" +
            "## プロダクトレビュー中のデモ実施者\n" +
            "\n" +
            "## 検討内容(How)",
        weight: 0,
        labels: ["PBI", "PPBI", "広告構造"],
        url: "https://gitlab.devsep.com/pyxis-enterprise/general/issues/issues/1319",
    },
    {
        index: 2,
        title: "広告構造対応したクリエイティブレポートが過去にさかのぼって復旧される",
        description: "## 解決したいこと(Why)\n" +
            "\n" +
            "#1231 でクリエイティブレポートが広告構造(Twitter IO/キャンペーン/広告グループ/広告)を含めて取得できるようなったが、過去分(2018/11~)の再取得は実施していない。\n" +
            "\n" +
            "CRALY はこれまで過去 2018年11月 までのレポートをサポートしているため、再取得を実施する。\n" +
            "\n" +
            "## 前提条件\n" +
            "\n" +
            "あとで数値チェックができるよう、削除前のクリエイティブレポートのダンプが存在していること\n" +
            "\n" +
            "## Done 条件\n" +
            "\n" +
            "## 完了条件(What)\n" +
            "\n" +
            "2018 年 11 月までの削除されたプロモツイートにひもづくクリエイティブレポートが復旧されていること(issues#1305 で実施予定)\n" +
            "\n" +
            "### やること\n" +
            "\n" +
            "* workflow 過去分再実行\n" +
            "    * 以下期間において mrf を含めて <媒体名>_m を実行する\n" +
            "        * 2018年11月 ~ 2019年8月\n" +
            "        * mrf を含めるのは、Yahoo/Twitter は以下 8 月リリースの v6.0.0 リリースから広告構造のデータを取得し始めたため\n" +
            "            * https://gitlab.devsep.com/pyxis-enterprise/general/media-report-fetcher/blob/master/CHANGELOG.md#600-2019-08-23\n" +
            "* 数値チェック\n" +
            "\n" +
            "### やらないこと\n" +
            "\n" +
            "## リリース影響\n" +
            "\n" +
            "## プロダクトレビュー中のデモ実施者\n" +
            "\n" +
            "## 検討内容(How)\n" +
            "\n" +
            "* 過去分チェックの方法(対象期間、対象広告アカウント)についてはプランニングで行う\n" +
            "    * #1305 と同様に、変更前の過去データのある一定の期間と、新データのある一定の期間が広告構造を無視すると一致することを確認する",
        weight: 3,
        labels: ["PBI", "PPBI", "広告構造"],
        url: "https://gitlab.devsep.com/pyxis-enterprise/general/issues/issues/1312",
    },
    {
        index: 3,
        title: "選択したクリエイティブの日別のパフォーマンス推移が閲覧できる [Blocked #1348]",
        description: "## 解決したいこと(Why)\n" +
            "* CRレポートフィルタで指定した期間の合算値だけでなく、デイリーでの数値変動を追えるようにしたい\n" +
            "* 特にインフィード型のCRは、配信当初の数値変動が大きい & 継続的に配信しているとCRの枯れが発生するため、デイリーでの数値変動が重要になってくる\n" +
            "\n" +
            "## Done 条件\n" +
            "\n" +
            "* user-site が master にマージされること\n" +
            "* webapp-backend が master にマージされること\n" +
            "\n" +
            "## 完了条件(What)\n" +
            "* 1つのクリエイティブを選択した際に、デイリーでの数値変動を閲覧できること\n" +
            "    * // 1つのクリエイティブじゃないほうが本当はいいですが、いったんは1つのクリエイティブでもいいかなぁと\n" +
            "* Cost(棒), CPA(線), CTR(線)の3軸 x デイリーでの棒&折れ線グラフが表示されること\n" +
            "    * // 表示する指標の変更もできるようにしたいですが、ここではなしでいいかなぁと\n" +
            "    * 軸を減らして実装が早くなるのであれば、軸を減らすことは許容される\n" +
            "        * 軸を 2 つにするのであれば、CPA / CTR のいずれをいったん考慮外とする\n" +
            "* タイル・リスト双方でできること\n" +
            "* ファイル単位・クリエリティブ単位の双方で表示されること\n" +
            "* グラフに出てくる日付の期間はCRレポートフィルタで指定されたものと同一であること\n" +
            "\n" +
            "\n" +
            "### 前提\n" +
            "\n" +
            "- ワイヤーフレームが作成されている\n" +
            "- ワイヤーフレームのレビューが終わっている #1348\n" +
            "- グラフ表示に使用するライブラリが決まっている\n" +
            "- #1353 でグラフコンポーネントのたたき台ができていること\n" +
            "    - デイリーレポートグラフの使い勝手の確認が終わっていること\n" +
            "\n" +
            "### やること\n" +
            "\n" +
            "#### API仕様 検討\n" +
            "\n" +
            "#### user-site\n" +
            "\n" +
            "* APIClientの実装\n" +
            "* API結果をもとにしたクリエイティブの日別レポート(グラフ)の表示\n" +
            "    * 軸を 2 つにするのであれば、CPA / CTR のいずれをいったん考慮外とする\n" +
            "    * #1353 で作ったデイリーレポートグラフコンポーネントのレビュー、手直し\n" +
            "* 動作確認\n" +
            "\n" +
            "#### webapp-backend\n" +
            "\n" +
            "* API仕様検討の結果に準ずる、クリエイティブの日別のレポートをレスポンスとして返す\n" +
            "    * 3 軸返すこと\n" +
            "    * データを取得するためのSQL検討/実装\n" +
            "    * API実装\n" +
            "* 動作確認\n" +
            "\n" +
            "### やらないこと\n" +
            "\n" +
            "- 前提に書かれている作業\n" +
            "\n" +
            "## リリース影響\n" +
            "\n" +
            "## プロダクトレビュー中のデモ実施者\n" +
            "\n" +
            "## 検討内容(How)",
        weight: 0,
        labels: ["Blocking", "PBI", "デイリーグラフ"],
        url: "https://gitlab.devsep.com/pyxis-enterprise/general/issues/issues/1211",
    },
    {
        index: 4,
        title: "クリエイティブレポートの csv/excel ダウンロードが負荷軽減できる",
        description: "## 解決したいこと(Why)\n" +
            "\n" +
            "#689 で複数ダウンロードのリクエストに耐えうる仕組みが検討されたので、その方法を webapp-backend に適用する。\n" +
            "\n" +
            "## Done 条件\n" +
            "\n" +
            "* webapp-backend の修正が master にマージされること\n" +
            "\n" +
            "## 完了条件(What)\n" +
            "\n" +
            "* csv/excel 複数ダウンロードリクエストに耐えうる仕組みが適用されていること\n" +
            "\n" +
            "### やること\n" +
            "\n" +
            "#### creative-report-exporter\n" +
            "\n" +
            "- API設計\n" +
            "- リポジトリ作成\n" +
            "- 実装\n" +
            "- テストコード実装\n" +
            "- マニフェストファイル追加\n" +
            "- CI設定追加\n" +
            "- 動作確認\n" +
            "- パフォーマンスチェック\n" +
            "    - パフォーマンス要件の決定\n" +
            "    - 計測\n" +
            "- リリース\n" +
            "    - masterへのマージ\n" +
            "    - タグ作成、deployボタンのクリック\n" +
            "\n" +
            "#### k8s-secret\n" +
            "\n" +
            "- creative-report-exporterの設定追加\n" +
            "    - DB接続設定とか\n" +
            "\n" +
            "#### infra\n" +
            "\n" +
            "- バケット設計\n" +
            "- dev/prod バケット追加\n" +
            "\n" +
            "### やらないこと\n" +
            "\n" +
            "- webapp-backendとのつなぎ込み\n" +
            "\n" +
            "## リリース影響\n" +
            "\n" +
            "## プロダクトレビュー中のデモ実施者\n" +
            "\n" +
            "## 検討内容(How)",
        weight: 0,
        labels: ["Blocking", "Excel raw data", "PBI", "PPBI"],
        url: "https://gitlab.devsep.com/pyxis-enterprise/general/issues/issues/1299",
    },
    {
        index: 5,
        title: "[どのように合計・平均値を表示するかを決めること] タイル型でもCRレポートフィルタに合致した全CRの合計値と平均値を閲覧できる",
        description: "## 解決したいこと(Why)\n" +
            "\n" +
            "- #1206 で作ったパーツをもとに、タイル型でも同様にCRレポートフィルタに合致するCR全体の合計値/平均値を閲覧したい\n" +
            "\n" +
            "## Done 条件\n" +
            "\n" +
            "- user-siteの変更がmasterにマージされること\n" +
            "\n" +
            "## 完了条件(What)\n" +
            "\n" +
            "* 以下の値がCRレポートフィルタの下部で閲覧できること\n" +
            "  * Imp：合計値\n" +
            "  * Click:合計値\n" +
            "  * CV:合計値\n" +
            "  * Cost:合計値\n" +
            "  * CTR:平均値(Clickの合計値 / Impの合計値)\n" +
            "  * CPC:平均値(Costの合計値 / Clickの合計値)\n" +
            "  * CVR:平均値(CVの合計値 / Clickの合計値)\n" +
            "  * CPA:平均値(Costの合計値 / CVの合計値)\n" +
            "* 合計値/平均値は、200件で絞られずにフィルタに合致した全体の数値であること\n" +
            "* フィルタ条件を変えて再検索されるたびに、値が更新されること\n" +
            "* すべてのフィルタ項目に合致した値が表示されること\n" +
            "* `タイル画面`で閲覧できること\n" +
            "* クリエイティブ・ファイル単位のCRレポート双方で閲覧できること\n" +
            "* スクロールしてもヘッダ固定されていること（スティッキーヘッダーっぽくなってればいい\n" +
            "* `合計値や平均値がどの項目のものであるか容易に判別できること`\n" +
            "\n" +
            "### やること\n" +
            "\n" +
            "#### user-site\n" +
            "- 完了条件の合計値/平均値が表示される\n" +
            "- 動作確認\n" +
            "  - 表示されていることの確認\n" +
            "    - 表示されている数値の確認は行わない\n" +
            "  - 画面幅を狭くした際、クリエイティブレポートと、追加された合計・平均行に見た目上変化がないこと\n" +
            "  - 数値の表記(数値のコンマ区切り、%といった単位、中央揃え)はレポートと同様になっていること\n" +
            "\n" +
            "#### webapp-backend\n" +
            "- なし\n" +
            "\n" +
            "### やらないこと\n" +
            "* コンポーネントの配置/デザインの本 PBI 着手前の決定\n" +
            "* 配置/デザインの MR 内での指摘\n" +
            "  * プロダクトレビューで実施すること\n" +
            "* 中央値の算出\n" +
            "* 表示件数の 200 件制限解除\n" +
            "* フィルタで平均以上/以下を指定できること\n" +
            "* 平均値・合計値の表示切り替え\n" +
            "## リリース影響\n" +
            "なし\n" +
            "\n" +
            "## プロダクトレビュー中のデモ実施者\n" +
            "\n" +
            "## 検討内容(How)\n" +
            "* あんまり画面表示を専有しないこと\n" +
            "* null のものは 0 として算出する",
        weight: 0,
        labels: ["Creative report filter", "PBI"],
        url: "https://gitlab.devsep.com/pyxis-enterprise/general/issues/issues/1303",
    },
];